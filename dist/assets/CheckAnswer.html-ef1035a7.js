import{_ as l,p as r,q as m,s as a,R as s,t,Z as e,n as i}from"./framework-85e9f276.js";const c="/assets/img3-c77d4012.jpg",o="/assets/image-20240202214744848-57e87ca7.png",p="/assets/image-20240202214847785-9e3faa22.png",h="/assets/image-20240202215028187-519a479d.png",d="/assets/image-20240202215124766-1c7f405d.png",u={},_=e(`<h1 id="答题卡填涂识别" tabindex="-1"><a class="header-anchor" href="#答题卡填涂识别" aria-hidden="true">#</a> 答题卡填涂识别</h1><h2 id="_1-开发目的" tabindex="-1"><a class="header-anchor" href="#_1-开发目的" aria-hidden="true">#</a> 1 开发目的</h2><p>答题卡，是老师和同学们需要共同面对的东西。老师可以利用答题卡更快的批改卷子，而同学们也得益于答题卡，提高了答题效率；可事实上，它并不是完美的。使用它必须拥有相应的读卡机，如果说老师在居家办公或者排队用读卡机的人数太多了，就会大大降低工作效率。因此，我结合现有的网络上面的资料。开发出了一个答题卡识别的程序</p><blockquote><p>部分算法来源于网络</p></blockquote><h2 id="_2-如何运行" tabindex="-1"><a class="header-anchor" href="#_2-如何运行" aria-hidden="true">#</a> 2 如何运行</h2><h3 id="_2-1-运行准备" tabindex="-1"><a class="header-anchor" href="#_2-1-运行准备" aria-hidden="true">#</a> 2.1 运行准备</h3><p>首先您需要安装以下第三方库</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> scipy <span class="token parameter variable">-i</span>  https://pypi.tuna.tsinghua.edu.cn/simple <span class="token parameter variable">--user</span>
pip <span class="token function">install</span> imutils <span class="token parameter variable">-i</span>  https://pypi.tuna.tsinghua.edu.cn/simple <span class="token parameter variable">--user</span>
pip <span class="token function">install</span> opencv-python <span class="token parameter variable">-i</span>  https://pypi.tuna.tsinghua.edu.cn/simple <span class="token parameter variable">--user</span>
pip <span class="token function">install</span> sv_ttk <span class="token parameter variable">-i</span>  https://pypi.tuna.tsinghua.edu.cn/simple <span class="token parameter variable">--user</span>
</code></pre></div><p>之后请你运行以下代码或直接从 <code>menu.pyw</code> 中启动</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>python menu.pyw
</code></pre></div><blockquote><p>考虑到您不一定拥有相似的答题卡，我制作了一些样本放在 <code>test</code> 目录下</p><img src="`+c+'" alt="img3"></blockquote><h3 id="_2-2-如何使用" tabindex="-1"><a class="header-anchor" href="#_2-2-如何使用" aria-hidden="true">#</a> 2.2 如何使用</h3><p>运行后会出现这样一个界面</p><p><img src="'+o+'" alt="image-20240202214744848"></p><p>请点击 <code>考生答案</code> 并上传答题卡，如果您没有相应素材请在 <code>test</code> 文件夹中取用</p><p><img src="'+p+'" alt="image-20240202214847785"></p><p>之后上传正确答案，在 <code>test\\case1</code> 中，有一个 <code>ans1.txt</code>，那个就是提前写好的答案</p><p><img src="'+h+'" alt="image-20240202215028187"></p><p>你也可以按照这样的格式自定义答案，每一个答案后换一行</p><p>之后点击 <code>检查答案</code> 即可</p><p><img src="'+d+'" alt="image-20240202215124766"></p><h2 id="_3-程序原理" tabindex="-1"><a class="header-anchor" href="#_3-程序原理" aria-hidden="true">#</a> 3 程序原理</h2>',22),g={href:"https://zhuanlan.zhihu.com/p/395094275",target:"_blank",rel:"noopener noreferrer"},f=e('<h3 id="_3-1-寻找图形轮廓" tabindex="-1"><a class="header-anchor" href="#_3-1-寻找图形轮廓" aria-hidden="true">#</a> 3.1 寻找图形轮廓</h3><p>寻找一个图形轮廓前，需要先对输入的图片的一个复制进行以下几个操作</p><ol><li>转换成灰度图</li><li>进行高斯模糊以消除噪声、模糊细节</li><li>用 Canny 边缘检测获取图中的所有轮廓</li><li>在轮廓图中获取所有轮廓并用极点表示</li></ol><p>然后将所有轮廓按照大小进行降序排序，在应用中认为最大的一个矩形轮廓（有4个极点）就是答题区域的边缘矩形。找到的极点坐标在原图上也是在相同的位置。</p><h3 id="_3-2-四点透视变换调整图片" tabindex="-1"><a class="header-anchor" href="#_3-2-四点透视变换调整图片" aria-hidden="true">#</a> 3.2 四点透视变换调整图片</h3><p>手机拍摄的图片会有一些角度的偏转，可以找到四个矩形的极点后，基于这四个极点对整张图片进行四点透视变换，把图片调整正，以方便进一步的使用。</p><h3 id="_3-3-找到涂黑的选项的坐标位置" tabindex="-1"><a class="header-anchor" href="#_3-3-找到涂黑的选项的坐标位置" aria-hidden="true">#</a> 3.3 找到涂黑的选项的坐标位置</h3><p>对于二值化后的图找轮廓，然后对轮廓进行矩形拟合，如果找到了跟选项框大小相近的轮廓，就认为是涂黑的选项，然后对这个轮廓求矩值，由这个公式可求出轮廓的重心</p>',8),y=a("p",{class:"katex-block"},[a("span",{class:"katex-display"},[a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[a("semantics",null,[a("mrow",null,[a("mi",null,"c"),a("mi",null,"X"),a("mo",null,"="),a("mi",null,"i"),a("mi",null,"n"),a("mi",null,"t"),a("mo",{stretchy:"false"},"("),a("mi",null,"M"),a("mo",{stretchy:"false"},"["),a("mi",{mathvariant:"normal"},'"'),a("mi",null,"m"),a("mn",null,"10"),a("mi",{mathvariant:"normal"},'"'),a("mo",{stretchy:"false"},"]"),a("mi",{mathvariant:"normal"},"/"),a("mi",null,"M"),a("mo",{stretchy:"false"},"["),a("mi",{mathvariant:"normal"},'"'),a("mi",null,"m"),a("mn",null,"00"),a("mi",{mathvariant:"normal"},'"'),a("mo",{stretchy:"false"},"]"),a("mo",{stretchy:"false"},")"),a("mtext",null,"，"),a("mi",null,"c"),a("mi",null,"Y"),a("mo",null,"="),a("mi",null,"i"),a("mi",null,"n"),a("mi",null,"t"),a("mo",{stretchy:"false"},"("),a("mi",null,"M"),a("mo",{stretchy:"false"},"["),a("mi",{mathvariant:"normal"},'"'),a("mi",null,"m"),a("mn",null,"01"),a("mi",{mathvariant:"normal"},'"'),a("mo",{stretchy:"false"},"]"),a("mi",{mathvariant:"normal"},"/"),a("mi",null,"M"),a("mo",{stretchy:"false"},"["),a("mi",{mathvariant:"normal"},'"'),a("mi",null,"m"),a("mn",null,"00"),a("mi",{mathvariant:"normal"},'"'),a("mo",{stretchy:"false"},"]"),a("mo",{stretchy:"false"},")")]),a("annotation",{encoding:"application/x-tex"},' cX=int(M["m10"]/M["m00"])，cY=int(M["m01"]/M["m00"]) ')])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6833em"}}),a("span",{class:"mord mathnormal"},"c"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.07847em"}},"X"),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),a("span",{class:"mrel"},"="),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal"},"in"),a("span",{class:"mord mathnormal"},"t"),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),a("span",{class:"mopen"},"["),a("span",{class:"mord"},'"'),a("span",{class:"mord mathnormal"},"m"),a("span",{class:"mord"},'10"'),a("span",{class:"mclose"},"]"),a("span",{class:"mord"},"/"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),a("span",{class:"mopen"},"["),a("span",{class:"mord"},'"'),a("span",{class:"mord mathnormal"},"m"),a("span",{class:"mord"},'00"'),a("span",{class:"mclose"},"])"),a("span",{class:"mord cjk_fallback"},"，"),a("span",{class:"mord mathnormal"},"c"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.22222em"}},"Y"),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),a("span",{class:"mrel"},"="),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal"},"in"),a("span",{class:"mord mathnormal"},"t"),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),a("span",{class:"mopen"},"["),a("span",{class:"mord"},'"'),a("span",{class:"mord mathnormal"},"m"),a("span",{class:"mord"},'01"'),a("span",{class:"mclose"},"]"),a("span",{class:"mord"},"/"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),a("span",{class:"mopen"},"["),a("span",{class:"mord"},'"'),a("span",{class:"mord mathnormal"},"m"),a("span",{class:"mord"},'00"'),a("span",{class:"mclose"},"])")])])])])],-1),b=e('<p>。</p><h3 id="_3-4-划分各个涂卡区域" tabindex="-1"><a class="header-anchor" href="#_3-4-划分各个涂卡区域" aria-hidden="true">#</a> 3.4 划分各个涂卡区域</h3><p>答题卡上有答题区域、学号区域、科目区域，这些区域都有固定的相对位置和相对大小，因此在寻找若干次矩形轮廓并排除掉最大的区域后（切图实现），可在剩余的图里找轮廓以确定区域。</p><h3 id="_3-5-确定选项的值与对应题号" tabindex="-1"><a class="header-anchor" href="#_3-5-确定选项的值与对应题号" aria-hidden="true">#</a> 3.5 确定选项的值与对应题号</h3><p>对答题卡进行透视变换后，每个位置对应的选项和题号都是固定的，通过人为的测量一些位置并记录，即可确定每个坐标对应的选项与题号。</p><h2 id="_4-参考资料" tabindex="-1"><a class="header-anchor" href="#_4-参考资料" aria-hidden="true">#</a> 4 参考资料</h2>',6),k={href:"https://zhuanlan.zhihu.com/p/395094275",target:"_blank",rel:"noopener noreferrer"},v={href:"https://blog.csdn.net/iracer/article/details/90260670",target:"_blank",rel:"noopener noreferrer"},x=e(`<h2 id="_5-第三方库" tabindex="-1"><a class="header-anchor" href="#_5-第三方库" aria-hidden="true">#</a> 5 第三方库</h2><div class="language-python" data-ext="py"><pre class="language-python"><code>scipy
imutils
opencv<span class="token operator">-</span>python
sv_ttk
</code></pre></div>`,2);function M(w,C){const n=i("ExternalLinkIcon");return r(),m("div",null,[_,a("blockquote",null,[a("p",null,[s("部分内容思路来源于："),a("a",g,[s("OPENCV中的图像处理"),t(n)])])]),f,y,b,a("ol",null,[a("li",null,[a("a",k,[s("OPENCV中的图像处理"),t(n)])]),a("li",null,[a("a",v,[s("OpenCV—轮廓操作"),t(n)])])]),x])}const q=l(u,[["render",M],["__file","CheckAnswer.html.vue"]]);export{q as default};
